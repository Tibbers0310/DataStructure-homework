/*
四染色”定理是计算机科学中著名的定理之一。使地图中相邻的国家或行政区域不重色，最少可用四种颜色对地图着色。利用栈采用回溯法对地图着色。
思想：对每个行政区编号：1-7；对颜色编号；a、b、c、d。
      从第一号行政区开始逐一染色，每一个区域逐次用四种颜色进行试探，若所取颜色与周围不重，则用栈记下来该区域的色数，否则依次用下一色数进行试探。
      若出现a-d均与周围发生重色，则需退栈回溯，修改当前栈顶的色数。
*/

void  mapcolor(int R[ ][ ],int n,int s[ ])
{  
   s[1]=1;        // 1号区域染1色
   int a=2;  J=1;    // a为区域号，J为染色号
    while ( a<=n)
    { while(( J<=4)&&(a<=n))  
         { k=1;     // k表示已经着色的区域号
           while(( k<a)&&(s[k]*R[a-1][k-1]!=J))    k=k+1;  // 若不相邻，或若相邻且不重色，对下一个相邻已染色区域判断                
           if (k<a)   J=J+1； //相邻且重色
           else { s[a]=J;  a=a+1;  J=1; } //相邻且不重色
          }
          if (J>4) { a=a-1; J=s[a]+1  } //回到上一个区域，选择下一号颜色试探
    }
 }
